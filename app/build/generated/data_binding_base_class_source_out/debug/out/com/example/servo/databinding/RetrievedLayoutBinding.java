// Generated by view binder compiler. Do not edit!
package com.example.servo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.servo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RetrievedLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView dateComp;

  @NonNull
  public final CheckBox isComp;

  @NonNull
  public final TextView statusComp;

  @NonNull
  public final TextView timeComp;

  @NonNull
  public final TextView typeComp;

  @NonNull
  public final TextView uidComp;

  private RetrievedLayoutBinding(@NonNull LinearLayout rootView, @NonNull TextView dateComp,
      @NonNull CheckBox isComp, @NonNull TextView statusComp, @NonNull TextView timeComp,
      @NonNull TextView typeComp, @NonNull TextView uidComp) {
    this.rootView = rootView;
    this.dateComp = dateComp;
    this.isComp = isComp;
    this.statusComp = statusComp;
    this.timeComp = timeComp;
    this.typeComp = typeComp;
    this.uidComp = uidComp;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RetrievedLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RetrievedLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.retrieved_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RetrievedLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateComp;
      TextView dateComp = ViewBindings.findChildViewById(rootView, id);
      if (dateComp == null) {
        break missingId;
      }

      id = R.id.isComp;
      CheckBox isComp = ViewBindings.findChildViewById(rootView, id);
      if (isComp == null) {
        break missingId;
      }

      id = R.id.statusComp;
      TextView statusComp = ViewBindings.findChildViewById(rootView, id);
      if (statusComp == null) {
        break missingId;
      }

      id = R.id.timeComp;
      TextView timeComp = ViewBindings.findChildViewById(rootView, id);
      if (timeComp == null) {
        break missingId;
      }

      id = R.id.typeComp;
      TextView typeComp = ViewBindings.findChildViewById(rootView, id);
      if (typeComp == null) {
        break missingId;
      }

      id = R.id.uidComp;
      TextView uidComp = ViewBindings.findChildViewById(rootView, id);
      if (uidComp == null) {
        break missingId;
      }

      return new RetrievedLayoutBinding((LinearLayout) rootView, dateComp, isComp, statusComp,
          timeComp, typeComp, uidComp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
